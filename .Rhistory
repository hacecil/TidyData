datasciencecoursera
q()
x <- 1:10
x
x <- 1L
x
atributes(x)
attributes(x)
x <_ c(0.5, 0.6)
x <- c(0.5, 0.6)
x <- vector("numeric", length = 10)
x
x <-c("a", "b", "c")
x
x<- 9:29
x
x <- c(1+0i, 2+4i)
x
y <- c("a", TRUE)
y
x <- 0.6
class(x)
x <- 0.6L
x <- 0.6
class(x)
as.numeric(x)
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- c("a", "b", "c")
as.numeric(x)
as.logical(x)
m <- matrix(nrow = 2, ncol = 3)
m
dim(m)
attributes(m)
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m) <- o(2,5)
dim(m) <- c(2,5)
m
x <- 1:3
y <- 10:12
cbind(x,y)
rbind(x,y)
q()
q()
x <- list(1, "a", TRUE, 1+4)
x
x <- vector("list", length = 5)
x
x <- factor(c("yes", "yes", "no", "yes", "no"),
levels=c("yes", "no"))
x
x <- c(1, 2, NA, 10, 3)
x
is,na(x)
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:4, bar = c(T,T,F,T)))
x <- data.frame(foo = 1:4, bar = c(T, T, T, F))
x
nrows(x)
nrow(x)
ncol(x)
x <- list(1, 2, 3)
serialize(x, NULL)
con <- url(https://www.choicehotels.com/kentucky/owensboro/sleep-inn-hotels/ky026, "r")
con <- url("https://www.choicehotels.com/kentucky/owensboro/sleep-inn-hotels/ky026", "r")
x <- readLines(con)
head(x)
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
print(bad)
x[!bad]
q()
cube <- functio(x,n) {
cube <- functon(x,n) {
cube <- function(x,n) {
    X^3
}
cube(3)
f <- function(x) {
    g <- functon(y) {
      y+z
      }
f <- function(x) {
    g <- function(y) {
        y*z
    }
    z <- 4
    x+ g(x)
}
z <- 10
f(3)
f <- function(x) {
    g <- function(y) {
y + z
    }
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- If(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x>5) {
x <- 0
}
q()
q()
q()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
d
sum(d[, 4])
connection <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(connection)
close(connection)
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
require(httr)
require(XML)
library(XML)
utils:::menuInstallPkgs()
library(XML)
require(XML)
htmlCode <- GET("http://biostat.jhsph.edu/~jleek/contact.html")
content <- content(htmlCode, as="text")
htmlParsed <- htmlParse(content, asText=TRUE)
xpathSApply(htmlParsed, "//title", xmlValue)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
utils:::menuInstallPkgs()
?data.table
??data.table
library(httr)
require(httpuv)
require(jsonlite)
acs <- data.table(read.csv(f))
??data.table
acs <- read.csv(f)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
?sqldf
??sqldf
library(RMySQL)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(dplyr)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
gold <- unique(acs$AGEP)
utils:::menuInstallPkgs()
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
utils:::menuInstallPkgs()
library(data.table)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
q()
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/Tidy/Project")
setwd("~/Repositories/Coursera/TidyDaData/Project")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/Tidy/Project")
setwd("~/Repositories/Coursera/TidyDaData/Project")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/TidyData")
setwd("~/Repositories/TidyDaData")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/TidyData")
setwd("~/GitHub Repositories/TidyDaData")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/GettingAndCleaningData/Project")
setwd("~/Repositories/Coursera/GettingAndCleaningData/Project")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/TidyData")
setwd("~/Repositories/TidyData")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
getwd()
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
f <- "Dataset.zip"
if (!file.exists(path)) {dir.create(path)}
download.file(url, file.path(path, f))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
path <- getwd()
path
f <- "Dataset.zip"
if (!file.exists(path)) {dir.create(path)}
download.file(url, file.path(path, f))
executable <- file.path("C:", "Program Files (x86)", "7-Zip", "7z.exe")
parameters <- "x"
cmd <- paste(paste0("\"", executable, "\""), parameters, paste0("\"", file.path(path, f), "\""))
system(cmd)
pathIn <- file.path(path, "UCI HAR Dataset")
list.files(pathIn, recursive=TRUE)
require(knitr)
require(markdown)
# setwd("~/GitHub repositories/TidyData")
setwd("~/Repositories/TidyDaData")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
setwd("~/Repositories/TidyData")
getwd()
source("C:\\Users\\Hank\\Documents\\GitHub\\TidyData\\run_analysis.R")
require(knitr)
require(markdown)
knit("run_analysis.Rmd", encoding="ISO8859-1")
knit("run_analysis.Rmd", encoding="ISO8859-1")
require(knitr)
require(markdown)
setwd("~/Repositories/TidyDaData")
knit("run_analysis.Rmd", encoding="ISO8859-1")
markdownToHTML("run_analysis.md", "run_analysis.html")
q()
